{
  "globals": {
    // Error: "module is not defined"
    // Solution: set "module": true here.
    // Or better yet, set env.node: true below.
    // "module": true
  },
  "root": true,
  "env": {
    "browser": true,
    "es2020": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "plugin:testing-library/react",
    "plugin:jest-dom/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:storybook/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "ignorePatterns": ["dist", ".eslintrc.cjs", ".eslintrc.json"],

  "plugins": [
    "@typescript-eslint",
    "vitest",
    "jsx-a11y",
    "testing-library",
    "jest-dom",
    // "react-refresh",
    "promise",
    "prettier"
  ],

  "rules": {
    ///////////////////////////////////////////////////////////////////////////
    //
    // Vite comes with eslint-plugin-react-refresh baked in.
    // However, this plugin gets in the way of syntax like
    // export * from './loader', which occurs in a lot of
    // component pages. For this reason, I've disabled it.
    //
    ///////////////////////////////////////////////////////////////////////////

    // "react-refresh/only-export-components": [
    //   "warn",
    //   { "allowConstantExport": true }
    // ],
    "prettier/prettier": "warn",
    "arrow-body-style": "off",
    "prefer-arrow-callback": "off",

    ///////////////////////////////////////////////////////////////////////////
    //
    // Gotcha!
    // https://github.com/eslint/eslint/blob/main/packages/js/src/configs/eslint-recommended.js
    // This can also be found in node_modules/@eslint/js/src/configs/eslint-recommended.js
    //
    // Visit the ESLint Rules Reference page: https://eslint.org/docs/latest/rules/
    // Look for rules marked with a checkmark (âœ“) in the "Recommended" column.
    // These are the rules included in "eslint:recommended".
    // And actually, it turns out that this is NOT one of them.
    //
    ///////////////////////////////////////////////////////////////////////////
    "guard-for-in": "warn",

    "vitest/expect-expect": "warn",
    "testing-library/no-debugging-utils": "off",
    "prefer-const": "warn",
    "no-var": "warn",
    "no-throw-literal": "off",
    "no-unreachable": "warn",
    "import/no-anonymous-default-export": "off",
    "no-eq-null": "warn",
    "react/no-unescaped-entities": "off",
    "no-prototype-builtins": "off",

    "@typescript-eslint/ban-ts-comment": "off", // Allows ignore statement
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "promise/always-return": "warn",
    "promise/no-return-wrap": "warn",
    "promise/param-names": "warn",
    "promise/catch-or-return": ["warn", { "allowFinally": true }],
    "promise/no-native": "off",
    "promise/no-nesting": "warn",
    "promise/no-promise-in-callback": "warn",
    "promise/no-callback-in-promise": "warn",
    "promise/avoid-new": "off",
    "promise/no-new-statics": "warn",
    "promise/no-return-in-finally": "warn",
    "promise/valid-params": "warn",
    "jest/no-disabled-tests": "off",
    "jest/no-commented-out-tests": "off"
  },

  // This is probably no longer necessary since SB v7 now more or less
  // requires you to follow the standard file naming conventions.
  "overrides": [
    {
      "files": ["**/*.stories.*", "**/story.*"],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    },
    {
      "files": [
        "*.stories.@(ts|tsx|js|jsx|mjs|cjs)",
        "*.story.@(ts|tsx|js|jsx|mjs|cjs)",
        "story.@(js|jsx|ts|tsx)"
      ],
      "rules": {
        "import/no-anonymous-default-export": "off",
        "storybook/await-interactions": "error",
        "storybook/context-in-play-function": "error",
        "storybook/default-exports": "error",
        "storybook/hierarchy-separator": "warn",
        "storybook/no-redundant-story-name": "warn",
        "storybook/prefer-pascal-case": "warn",
        "storybook/story-exports": "error",
        "storybook/use-storybook-expect": "error",
        "storybook/use-storybook-testing-library": "error"
      }
    }
  ]
}
